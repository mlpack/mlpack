steps:
# Checkout repository
- checkout: self
  clean: true
  fetchDepth: 1

# Set python version.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'

# Install Build Dependencies
- script: |
    set -e
    sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
    brew install libomp openblas armadillo cereal ensmallen ccache

    if [ "$BINDING" = "python" ]; then
      pip install --upgrade pip
      pip install cython numpy pandas zipp configparser wheel
    fi

    if [ "$BINDING" = "julia" ]; then
      brew install --cask julia
    fi

    if [ "$BINDING" = "go" ]; then
      brew install go
    fi

  displayName: 'Install Build Dependencies'

# Configure mlpack (CMake)
- script: |
    mkdir build && cd build
    if [ "$BINDING" = "python" ]; then
      cmake $CMAKEARGS -DPYTHON_EXECUTABLE=$(which python) ..
    else
      cmake $CMAKEARGS ..
    fi
  displayName: 'CMake'

# Build mlpack
- script: cd build && make -j2
  displayName: 'Build'

# Run tests via ctest.
- script: cd build && CTEST_OUTPUT_ON_FAILURE=1 ctest -T Test .
  displayName: 'Run tests via ctest'

# Publish test results to Azure Pipelines
- task: PublishTestResults@2
  inputs:
    testResultsFormat: cTest
    testResultsFiles: build/Testing/*/Test.xml
    failTaskOnFailedTests: true
  displayName: 'Publish tests'

# Publish build artifacts to Azure Pipelines
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'build/Testing/'
    artifactName: 'Tests'
  displayName: 'Publish artifacts test results'
