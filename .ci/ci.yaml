trigger:
  branches:
    include:
    - '*'
pr:
  branches:
    include:
    - '*'

jobs:
- job: Linux
  timeoutInMinutes: 360
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Plain:
        # Precompiled headers with debug symbols can cause too much disk space /
        # RAM usage.
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF'
      Python:
        CMakeArgs: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_GO_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF'
        binding: 'python'
        python.version: '3.7'
      Julia:
        CMakeArgs: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=ON -DBUILD_GO_BINDINGS=OFF -DJULIA_EXECUTABLE=/opt/julia-1.10.4/bin/julia -DBUILD_R_BINDINGS=OFF'
        binding: 'julia'
      Go:
        CMakeArgs: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=ON -DBUILD_R_BINDINGS=OFF'
        binding: 'go'
      Markdown:
        CMakeArgs: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_MARKDOWN_BINDINGS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF'

  steps:
  - template: linux-steps.yaml

- job: macOS
  timeoutInMinutes: 360
  pool:
    vmImage: macOS-latest
  strategy:
    matrix:
      # clang on OS X segfaults when using precompiled headers, so we disable
      # them.
      Plain:
        python.version: '3.8'
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF'
      Python:
        python.version: '3.8'
        binding: 'python'
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=ON -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF'
      Julia:
        python.version: '3.8'
        binding: 'julia'
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_JULIA_BINDINGS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF'
      Go:
        python.version: '3.8'
        binding: 'go'
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=ON -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF'

  steps:
  - template: macos-steps.yaml

- job: WindowsVS17
  timeoutInMinutes: 360
  displayName: Windows VS17
  pool:
    vmImage: windows-2022
  strategy:
    matrix:
      Plain:
        CMakeArgs: '-DDEBUG=ON -DPROFILE=OFF -DBUILD_TESTS=ON -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF'
        python.version: '2.7'
        CMakeGenerator: '-G "Visual Studio 17 2022"'
        MSBuildVersion: '17.0'
        ArchiveNoLibs: 'mlpack-windows-vs17-no-libs.zip'
        ArchiveLibs: 'mlpack-windows-vs17.zip'
        ArchiveTests: 'mlpack_test-vs17.xml'

  steps:
  - template: windows-steps.yaml
