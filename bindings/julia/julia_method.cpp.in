/**
 * @file julia/julia_${PROGRAM_NAME}.cpp
 *
 * This is an autogenerated file containing implementations of C functions to be
 * called by the Julia ${PROGRAM_NAME} binding.
 */
#include "julia_${PROGRAM_NAME}.h"

#define BINDING_TYPE BINDING_TYPE_JL
#include <${PROGRAM_MAIN_FILE}>

extern "C"
{

bool BINDING_FUNCTION(void* params, void* timers)
{
  util::Params* p = (util::Params*) params;
  util::Timers* t = (util::Timers*) timers;

  try
  {
    BINDING_FUNCTION(*p, *t);
    return true;
  }
  catch (std::exception& e)
  {
    std::cout << e.what() << std::endl;
    return false;
  }
}

void loadSymbols()
{
  // Do nothing.
}

// Any implementations of methods for dealing with model pointers will be put
// below this comment, if needed.
${MODEL_PTR_IMPLS}

}
