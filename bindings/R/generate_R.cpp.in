/**
 * @file R/generate_R.cpp.in
 * @author Yashwant Singh Parihar
 *
 * This is a template file to call the PrintR() function for a given binding.
 * 
 * mlpack is free software; you may redistribute it and/or modify it under the
 * terms of the 3-clause BSD license.  You should have received a copy of the
 * 3-clause BSD license along with mlpack.  If not, see
 * http://www.opensource.org/licenses/BSD-3-Clause for more information.
 */
#define BINDING_TYPE BINDING_TYPE_R
// Disable debug output.
#ifdef DEBUG
  #define HAD_DEBUG
  #undef DEBUG
#endif
#include <mlpack/core/util/log.hpp>
#ifdef HAD_DEBUG
  #undef HAD_DEBUG
  #define DEBUG
#endif

#include <mlpack/core.hpp>

// This will include the ParamData options that are part of the program.
#include <${PROGRAM_MAIN_FILE}>
#include <mlpack/core/util/mlpack_main.hpp>
#include <mlpack/bindings/R/print_R.hpp>

using namespace mlpack;
using namespace mlpack::bindings;
using namespace mlpack::bindings::r;
using namespace std;
using namespace mlpack::util;

int main(int /* argc */, char** /* argv */)
{
  // All the parameters are registered; get a copy of them.
  util::Params params = IO::Parameters(STRINGIFY(BINDING_NAME));

  PrintR(params, "${NAME}", STRINGIFY(BINDING_NAME));
}
